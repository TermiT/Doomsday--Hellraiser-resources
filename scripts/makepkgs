#!/usr/bin/env python
#
# Copyright (c) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008
# Contributors to the Freedoom project.  All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#  * Neither the name of the freedoom project nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
# IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
# OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import os
import sys

# Documentation files included with distributions.

DIST_DOCS = [
	"NEWS",
	"ChangeLog",
	"COPYING",
	"CREDITS",
	"README"
]

# Most WADs are given a ZIP equal to their name, but some have different
# names:

DIR_NAMES = {
	'doom2'    : 'freedoom-iwad',
	'doom1'    : 'freedoom-demo',
	'doom'     : 'freedoom-episodes',
	'freedoom' : 'freedoom-resource-wad',
}

# Run a command, displaying it before executing it.

def run_command(command):
	print "> " + command
	os.system(command)

# Find the version to build:

version = os.getenv("VERSION")

if version is None:
	raise Exception("Version not specified for release!")

# Build all of the packages

for filename in sys.argv[1:]:

	path = os.path.dirname(filename)
	basename = os.path.basename(filename)

	# Cut off the extension, and build the directory name

	pkgname = basename[0:-4]

	if pkgname in DIR_NAMES:
		base_dir = DIR_NAMES[pkgname]
	else:
		base_dir = pkgname

	# Append the version:

	base_dir += "-" + version

	# Replace underscores with hyphens:

	base_dir = base_dir.replace("_", "-")

	full_path = path + "/" + base_dir

	# Create directory, and add files.

	run_command("mkdir %s" % full_path)

	for doc in DIST_DOCS + [ filename ]:
		run_command("cp %s %s" % (doc, full_path))

	# Change to the parent directory, and build the zip

	orig_dir = os.getcwd()

	os.chdir(path)
	run_command("rm -f %s.zip" % base_dir)
	run_command("zip -r %s.zip %s" % (base_dir, base_dir))
	run_command("rm -rf %s" % base_dir)
	os.chdir(orig_dir)

